---

- name: "check if bundler is installed"
  command: "/home/discourse/.rbenv/shims/gem list --installed bundler --quiet"
  become_user: "discourse"
  check_mode: no
  ignore_errors: True
  changed_when: False
  register: gem_list_bundler
  
- name: "gem install bundler"
  when: gem_list_bundler.rc != 0
  command: "/home/discourse/.rbenv/shims/gem install bundler"
  become_user: "discourse"
  register: gem_install_bundler

- name: "gem update bundler"
  when: not gem_install_bundler.changed
  command: "/home/discourse/.rbenv/shims/gem update bundler"
  become_user: "discourse"
  register: gem_update_bundler
  changed_when: "'Nothing to update' not in gem_update_bundler.stdout"

- name: "rbenv rehash"
  command: "/home/discourse/.rbenv/bin/rbenv rehash"
  become_user: "discourse"
  changed_when: False

- name: "configure path to pg_config"
  when: ansible_os_family == "Debian"
  command: >
    /home/discourse/.rbenv/shims/bundle config build.pg
    --with-pg-config=/usr/lib/postgresql/{{ postgres_version }}/bin/pg_config
  become_user: "discourse"
  changed_when: False

- name: "determine currently installed gems"
  command: "/home/discourse/.rbenv/shims/bundle show --no-color"
  args:
    chdir: "/var/www/discourse"
  become_user: "discourse"
  check_mode: no
  ignore_errors: True
  changed_when: False
  register: bundle_install_pre

- name: "bundle install"
  command: >
    /home/discourse/.rbenv/shims/bundle install --verbose
    --deployment --without test --without development
    --binstubs=/home/discourse/bin --jobs=1 --retry=5
  args:
    chdir: "/var/www/discourse"
  become_user: "discourse"
  register: bundle_install
  changed_when: False

- name: "stdout from `bundle install`"
  when: discourse_verbose
  debug:
    var: bundle_install.stdout_lines
  changed_when: False

- name: "stderr from `bundle install`"
  when: discourse_verbose
  debug:
    var: bundle_install.stderr.split('\n')
  changed_when: False

- name: "check if `bundle install` made any changes"
  command: "/home/discourse/.rbenv/shims/bundle show --no-color"
  args:
    chdir: "/var/www/discourse"
  become_user: "discourse"
  check_mode: no
  ignore_errors: True
  register: bundle_install_post
  changed_when: >
    bundle_install_pre is not defined
    or bundle_install_post is not defined
    or ( bundle_install_pre.stdout != bundle_install_post.stdout )
  notify:
    - "reload discourse-unicorn"

# `bundle install` may alter the "BUNDLED WITH" version in Gemfile.lock. If we
# run the playbook again, Ansible will think there have been changes to the git
# repo even if the commit hash is the same. The following task prevents this.
- name: "git checkout -- Gemfile.lock"
  when: bundle_install_post is defined and bundle_install_post.changed
  command: "/usr/bin/git checkout -- Gemfile.lock"
  args:
    chdir: "/var/www/discourse"
  become_user: "discourse"

